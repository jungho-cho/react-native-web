[{"C:\\react_native\\grap_market_web\\src\\index.js":"1","C:\\react_native\\grap_market_web\\src\\App.js":"2","C:\\react_native\\grap_market_web\\src\\reportWebVitals.js":"3","C:\\react_native\\grap_market_web\\src\\child.js":"4","C:\\react_native\\grap_market_web\\src\\timer.js":"5","C:\\react_native\\grap_market_web\\src\\main\\index.js":"6","C:\\react_native\\grap_market_web\\src\\upload\\index.js":"7","C:\\react_native\\grap_market_web\\src\\project\\index.js":"8","C:\\react_native\\grap_market_web\\src\\config\\constants.js":"9"},{"size":593,"mtime":1611850731633,"results":"10","hashOfConfig":"11"},{"size":1232,"mtime":1612306017265,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":227,"mtime":1611784483108,"results":"14","hashOfConfig":"11"},{"size":359,"mtime":1611785593125,"results":"15","hashOfConfig":"11"},{"size":2741,"mtime":1612736148342,"results":"16","hashOfConfig":"11"},{"size":4687,"mtime":1612308320263,"results":"17","hashOfConfig":"11"},{"size":1341,"mtime":1612308827961,"results":"18","hashOfConfig":"11"},{"size":68,"mtime":1612737873641,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"bwtoxn",{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\react_native\\grap_market_web\\src\\index.js",[],["42","43"],"C:\\react_native\\grap_market_web\\src\\App.js",["44","45"],"import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport \"antd/dist/antd.css\";\nimport MainPage from \"./main/index.js\";\nimport { Switch, Route, Link, useHistory } from \"react-router-dom\";\nimport ProductPage from \"./project\";\nimport UploadPage from \"./upload\";\nimport { Button } from \"antd\";\nimport { DownloadOutlined } from \"@ant-design/icons\";\n\nfunction App() {\n  const history = useHistory();\n\n  return (\n    <div>\n      <div id=\"header\">\n        <div id=\"header-area\">\n          <Link to=\"/\">\n            <img src=\"/images/icons/logo.png\" />\n          </Link>\n          <Button\n            size=\"large\"\n            onClick={() => {\n              history.push(\"/upload\");\n            }}\n            icon={<DownloadOutlined />}\n          >\n            상품 업로드\n          </Button>\n        </div>\n      </div>\n      <div id=\"body\">\n        <Switch>\n          <Route exact={true} path=\"/\">\n            <MainPage />\n          </Route>\n          <Route exact={true} path=\"/products/:id\">\n            <ProductPage />\n          </Route>\n          <Route exact={true} path=\"/upload\">\n            <UploadPage />\n          </Route>\n        </Switch>\n      </div>\n      <div id=\"footer\"></div>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\react_native\\grap_market_web\\src\\reportWebVitals.js",[],"C:\\react_native\\grap_market_web\\src\\child.js",[],"C:\\react_native\\grap_market_web\\src\\timer.js",["46"],"C:\\react_native\\grap_market_web\\src\\main\\index.js",["47","48","49"],"C:\\react_native\\grap_market_web\\src\\upload\\index.js",["50","51"],"import { Button, Divider, Form, Input, InputNumber, Upload, Modal } from \"antd\";\r\nimport { useState } from \"react\";\r\nimport \"./index.css\";\r\nimport { API_URL } from \"../config/constants.js\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction UploadPage() {\r\n  const [imageUrl, setImageUrl] = useState(null);\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const history = useHistory();\r\n\r\n  const showModal = () => {\r\n    setModalVisible(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setModalVisible(false);\r\n    history.replace(\"/\");\r\n  };\r\n\r\n  const onSubmit = (values) => {\r\n    axios\r\n      .post(`${API_URL}/products`, {\r\n        name: values.name,\r\n        description: values.description,\r\n        seller: values.seller,\r\n        price: parseInt(values.price),\r\n        imageUrl: imageUrl,\r\n      })\r\n      .then((result) => {\r\n        console.log(result);\r\n        showModal();\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"submit error : \", error);\r\n        showModal();\r\n      });\r\n  };\r\n\r\n  const onChangeUploadImage = (info) => {\r\n    if (info.file.status === \"uploading\") {\r\n      return;\r\n    }\r\n    if (info.file.status === \"done\") {\r\n      const response = info.file.response;\r\n      const imageUrl = response.imageUrl;\r\n      setImageUrl(imageUrl);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id=\"upload-container\">\r\n      <Form name=\"상품 업로드\" onFinish={onSubmit}>\r\n        <Modal\r\n          visible={modalVisible}\r\n          title=\"업로드 알람\"\r\n          onOk={handleOk}\r\n          footer={[\r\n            <Button key=\"submit\" type=\"primary\" onClick={handleOk}>\r\n              업로드 성공\r\n            </Button>,\r\n          ]}\r\n        />\r\n        <Form.Item\r\n          name=\"upload\"\r\n          label={<div className=\"upload-label\">상품 사진</div>}\r\n        >\r\n          <Upload\r\n            name=\"image\"\r\n            action={`${API_URL}/image`}\r\n            listType=\"picture\"\r\n            showUploadList={false}\r\n            onChange={onChangeUploadImage}\r\n          >\r\n            {imageUrl ? (\r\n              <img id=\"upload-image\" src={`${API_URL}/${imageUrl}`} />\r\n            ) : (\r\n              <div id=\"upload-img-placeholder\">\r\n                <img src=\"/images/icons/camera.png\" />\r\n                <span>이미지를 업로드해주세요.</span>\r\n              </div>\r\n            )}\r\n          </Upload>\r\n        </Form.Item>\r\n        <Divider />\r\n        <Form.Item\r\n          label={<div className=\"upload-label\">판매자 명</div>}\r\n          name=\"seller\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"판매자 이름을 입력해주세요.\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            className=\"upload-name\"\r\n            size=\"large\"\r\n            placeholder=\"이름을 입력해주세요.\"\r\n          ></Input>\r\n        </Form.Item>\r\n        <Divider />\r\n        <Form.Item\r\n          name=\"name\"\r\n          label={<div className=\"upload-label\">상품이름</div>}\r\n          rules={[{ required: true, message: \"상품 이름을 입력해주세요.\" }]}\r\n        >\r\n          <Input\r\n            className=\"upload-name\"\r\n            size=\"large\"\r\n            placeholder=\"상품 이름을 입력해주세요.\"\r\n          ></Input>\r\n        </Form.Item>\r\n        <Divider />\r\n        <Form.Item\r\n          name=\"price\"\r\n          label={<div className=\"upload-label\">상품 가격</div>}\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"상품 가격을 입력해주세요.\",\r\n            },\r\n          ]}\r\n        >\r\n          <InputNumber\r\n            defaultValue={0}\r\n            className=\"upload-name\"\r\n            size=\"large\"\r\n            placeholder=\"상품 가격을 입력해주세요.\"\r\n          ></InputNumber>\r\n        </Form.Item>\r\n        <Divider />\r\n        <Form.Item\r\n          name=\"description\"\r\n          label={<div className=\"upload-label\">상품 소개</div>}\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"상품 소개를 입력해주세요.\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input.TextArea\r\n            size=\"large\"\r\n            id=\"product-description\"\r\n            showCount\r\n            maxLength={200}\r\n            placeholder=\"상품 소개를 적어주세요.\"\r\n          ></Input.TextArea>\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button id=\"submit-button\" size=\"large\" htmlType=\"submit\">\r\n            문제 등록하기\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UploadPage;\r\n","C:\\react_native\\grap_market_web\\src\\project\\index.js",["52","53","54"],"import { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport \"./index.css\";\r\nimport { API_URL } from \"../config/constants\";\r\nimport dayjs from \"dayjs\";\r\n\r\nfunction ProductPage() {\r\n  const { id } = useParams();\r\n  const url = `${API_URL}/products/${id}`;\r\n  const [product, setProduct] = useState(null);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(url)\r\n      .then((result) => {\r\n        setProduct(result.data.product);\r\n        console.log(result.data.product);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"error : \" + error);\r\n      });\r\n  }, []);\r\n\r\n  if (!product) {\r\n    return <h1>상품 정보를 받고 있습니다....</h1>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div id=\"image-box\">\r\n        <img src={`${API_URL}/${product.imageUrl}`} />\r\n      </div>\r\n      <div id=\"profile-box\">\r\n        <img src=\"/images/icons/avatar.png\" />\r\n        <span>{product.seller}</span>\r\n      </div>\r\n      <div id=\"content-box\">\r\n        <div id=\"name\">{product.name}</div>\r\n        <div id=\"price\">{product.price}</div>\r\n        <div id=\"created-at\">\r\n          {dayjs(product.createdAt).format(\"YYYY년MM월DD일\")}\r\n        </div>\r\n        <pre id=\"description\">{product.description}</pre>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductPage;\r\n","C:\\react_native\\grap_market_web\\src\\config\\constants.js",[],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":1,"column":8,"nodeType":"61","messageId":"62","endLine":1,"endColumn":12},{"ruleId":"63","severity":1,"message":"64","line":19,"column":13,"nodeType":"65","endLine":19,"endColumn":49},{"ruleId":"66","severity":1,"message":"67","line":9,"column":6,"nodeType":"68","endLine":9,"endColumn":8,"suggestions":"69"},{"ruleId":"63","severity":1,"message":"64","line":46,"column":17,"nodeType":"65","endLine":46,"endColumn":62},{"ruleId":"63","severity":1,"message":"64","line":62,"column":17,"nodeType":"65","endLine":62,"endColumn":81},{"ruleId":"63","severity":1,"message":"64","line":68,"column":23,"nodeType":"65","endLine":71,"endColumn":25},{"ruleId":"63","severity":1,"message":"64","line":77,"column":15,"nodeType":"65","endLine":77,"endColumn":71},{"ruleId":"63","severity":1,"message":"64","line":80,"column":17,"nodeType":"65","endLine":80,"endColumn":55},{"ruleId":"66","severity":1,"message":"70","line":23,"column":6,"nodeType":"68","endLine":23,"endColumn":8,"suggestions":"71"},{"ruleId":"63","severity":1,"message":"64","line":32,"column":9,"nodeType":"65","endLine":32,"endColumn":55},{"ruleId":"63","severity":1,"message":"64","line":35,"column":9,"nodeType":"65","endLine":35,"endColumn":47},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'time'. Either include it or remove the dependency array. You can also do a functional update 'setTime(t => ...)' if you only need 'time' in the 'setTime' call.","ArrayExpression",["74"],"React Hook useEffect has a missing dependency: 'url'. Either include it or remove the dependency array.",["75"],"no-global-assign","no-unsafe-negation",{"desc":"76","fix":"77"},{"desc":"78","fix":"79"},"Update the dependencies array to be: [time]",{"range":"80","text":"81"},"Update the dependencies array to be: [url]",{"range":"82","text":"83"},[199,201],"[time]",[632,634],"[url]"]